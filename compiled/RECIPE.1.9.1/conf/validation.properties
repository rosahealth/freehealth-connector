notification.XSD.17=%CONF%/XSD/20160906-recipe/notification.xsd
feedback.XSD.17=%CONF%/XSD/20160906-recipe/feedback.xsd
notification.XSD.19=%CONF%/XSD/20170403-recipe/notification.xsd
feedback.XSD.19=%CONF%/XSD/20170403-recipe/feedback.xsd
notification.XSD=%CONF%/XSD/20170403-recipe/notification.xsd
feedback.XSD=%CONF%/XSD/20170403-recipe/feedback.xsd

kmehr.XSD.17=%CONF%/XSD/xsd-kmehr-1.17.1/ehealth-kmehr/XSD/recipe_PP_kmehr_elements_1_17.xsd
kmehr.XSD.19=%CONF%/XSD/xsd-kmehr-1.19.0/ehealth-kmehr/XSD/recipe_PP_kmehr_elements_1_19.xsd
kmehr.XSD.28=%CONF%/XSD/xsd-kmehr-1.28.0/ehealth-kmehr/XSD/kmehr_elements-1_28.xsd

#######################################################################################################################
######################    P0   ########################################################################################
#######################################################################################################################
##(:Kmehr versions supported: 1.28 (20190301):)
kmehr.assert.P0.1 = /kmehrmessage/header/standard/cd[@S='CD-STANDARD' and @SV='1.29' and (text()='20190301')];1;1

##(:2 header IDs must be present: first one with "S" attribute = ID-KMEHR; the second one with "S" attribute = LOCAL:)
kmehr.assert.P0.2 = /kmehrmessage/header/id;2;2
kmehr.assert.P0.3 = /kmehrmessage/header/id[1][@S='ID-KMEHR' and @SV='1.0'];1
kmehr.assert.P0.4 = /kmehrmessage/header/id[2][@S='LOCAL'];1

##(:Sender: At least 2 hcparty's: individual healthcareprovider (or hospital) and "application" (softwareprovider). Name or combination firstname + familyname should always be present:)
kmehr.assert.P0.5 = /kmehrmessage/header/sender/hcparty;2

kmehr.assert.P0.6 = /kmehrmessage/header/sender/hcparty[1]/id[@S='ID-HCPARTY' and @SV='1.0'];1
kmehr.assert.P0.7 = /kmehrmessage/header/sender/hcparty[1]/cd[@S='CD-HCPARTY' and @SV='1.15' and (text()='orghospital' or text()='persphysician' or text()='persmidwife' or text()='persdentist')];1
kmehr.assert.P0.8 = /kmehrmessage/header/sender/hcparty[2]/cd[@S='CD-HCPARTY' and @SV='1.15' and text()='application'];1
kmehr.assert.P0.9 = /kmehrmessage/header/sender/hcparty[name or familyname];1

##(:For sender "application"; both telephone and email need to be present; and cannot be empty:)
kmehr.assert.P0.10 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-ADDRESS' and @SV='1.1']/text();2
kmehr.assert.P0.11 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-TELECOM' and @SV='1.0']/text();2
kmehr.assert.P0.12 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-TELECOM' and text()='phone'];1
kmehr.assert.P0.13 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-TELECOM' and text()='email'];1
kmehr.assert.P0.14 = /kmehrmessage/header/sender/hcparty[2]/telecom/telecomnumber[string-length(text())!=0];1

##(:Recipient: only 1 hcparty with recipe data:)
kmehr.assert.P0.15 = /kmehrmessage/header/recipient/hcparty/id[@S='ID-HCPARTY' and @SV='1.0' and text()='RECIPE'];1;1
kmehr.assert.P0.16 = /kmehrmessage/header/recipient/hcparty/cd[@S='CD-HCPARTY' and @SV='1.15' and text()='orgpublichealth'];1;1
kmehr.assert.P0.17 = /kmehrmessage/header/recipient/hcparty/name[text()='Recip-e'];1;1

##(:Folder: exactly 1 folder; with exactly 1 ID; with value "1":)
kmehr.assert.P0.18 = /kmehrmessage/folder/id[@S='ID-KMEHR' and @SV='1.0' and text()='1'];1;1

##(:Patient: exactly 1 patient; with exactly 1 ID (= INSZ/NISS number in 11 positions):)
kmehr.assert.P0.19 = /kmehrmessage/folder/patient;1;1
kmehr.assert.P0.20 = /kmehrmessage/folder/patient/id;1;1
kmehr.assert.P0.21 = /kmehrmessage/folder/patient/id[@S='ID-PATIENT' and @SV='1.0' and (string-length(text())=11)];1;1

##(:Patient: presence of firstname; familyname; sex and birthdate:)
kmehr.assert.P0.22 = /kmehrmessage/folder/patient/firstname;1;1
kmehr.assert.P0.23 = /kmehrmessage/folder/patient/familyname;1;1
kmehr.assert.P0.24 = /kmehrmessage/folder/patient/birthdate[date or year or yearmonth];1;1
kmehr.assert.P0.25 = /kmehrmessage/folder/patient/sex/cd[@S='CD-SEX' and @SV='1.1'];1;1

##(:Transaction: Exactly 1 transaction; with 1 ID and 1 CD (CD-TRANSACTION with value pharmaceuticalprescription):)
kmehr.assert.P0.26 = /kmehrmessage/folder/transaction/id[@S='ID-KMEHR' and @SV='1.0' and text()='1'];1;1
kmehr.assert.P0.27 = /kmehrmessage/folder/transaction/cd[@S='CD-TRANSACTION' and @SV='1.13' and text()='pharmaceuticalprescription'];1;1

##(:Author: Exactly 1 hcparty; with 1 ID (in 11 positions; starting with 1; 3 or 4) and 1 CD-HCPARTY (only allowed prescribers):)
kmehr.assert.P0.28 = /kmehrmessage/folder/transaction/author/hcparty;1;1
kmehr.assert.P0.29 = /kmehrmessage/folder/transaction/author/hcparty/id;1;1
kmehr.assert.P0.30 = /kmehrmessage/folder/transaction/author/hcparty/id[@S='ID-HCPARTY' and @SV='1.0' and string-length(text())=11];1;1
kmehr.assert.P0.31 = /kmehrmessage/folder/transaction/author/hcparty/cd;1;1
kmehr.assert.P0.32 = /kmehrmessage/folder/transaction/author/hcparty/cd[@S='CD-HCPARTY' and @SV='1.15' and (text()='persphysician' or text()='persmidwife' or text()='persdentist')];1;1

#(:Author: presence of name or combination firstname + familyname; presence of address; presence of telephone number:)
kmehr.assert.P0.33 = /kmehrmessage/folder/transaction/author/hcparty[name or familyname];1
kmehr.assert.P0.34 = /kmehrmessage/folder/transaction/author/hcparty/address;1;1
kmehr.assert.P0.35 = /kmehrmessage/folder/transaction/author/hcparty/address/cd[@S='CD-ADDRESS' and (@SV='1.0' or @SV='1.1') and text()='work'];1;1
kmehr.assert.P0.36 = /kmehrmessage/folder/transaction/author/hcparty/telecom/cd[@S='CD-ADDRESS' and (@SV='1.0' or @SV='1.1') and text()='work'];1;1
kmehr.assert.P0.37 = /kmehrmessage/folder/transaction/author/hcparty/telecom/cd[@S='CD-TELECOM' and @SV='1.0' and text()='phone'];1;1
kmehr.assert.P0.38 = /kmehrmessage/folder/transaction/author/hcparty/telecom/telecomnumber[string-length(text())>1];1;1

#(:Transaction: "iscomplete" and "isvalidated" are both true; no expirationdate should be defined:)
kmehr.assert.P0.39 = /kmehrmessage/folder/transaction/iscomplete[text()='true'];1;1
kmehr.assert.P0.40 = /kmehrmessage/folder/transaction/isvalidated[text()='true'];1;1
kmehr.assert.P0.41 = /kmehrmessage/folder/transaction/expirationdate;1;1

#(:Transaction: contains exactly 1 heading; and cannot contain any items:)
kmehr.assert.P0.42 = /kmehrmessage/folder/transaction/heading;1;1
kmehr.assert.P0.43 = /kmehrmessage/folder/transaction/item;0;0

#(:Heading: exactly 1 ID and 1 CD (CD-HEADING) with value 'prescription':)
kmehr.assert.P0.44 = /kmehrmessage/folder/transaction/heading/id[@S='ID-KMEHR' and @SV='1.0' and text()='1'];1;1
kmehr.assert.P0.45 = /kmehrmessage/folder/transaction/heading/cd[@S='CD-HEADING' and @SV='1.2' and text()='prescription'];1;1

#(:Heading: cannot contain any other headings or text:)
kmehr.assert.P0.46 = /kmehrmessage/folder/transaction/heading/heading;0;0
kmehr.assert.P0.47 = /kmehrmessage/folder/transaction/heading/text;0;0

#(:Items: at least 1 and no more than 10; with correct ID en CD specifications:)
kmehr.assert.P0.48 = /kmehrmessage/folder/transaction/heading/item;1;10
kmehr.assert.P0.49 = /kmehrmessage/folder/transaction/heading/item/id[@S!='ID-KMEHR'];0;0
kmehr.assert.P0.50 = /kmehrmessage/folder/transaction/heading/item/id[@SV!='1.0'];0;0
kmehr.assert.P0.51 = /kmehrmessage/folder/transaction/heading/item/cd[@S!='CD-ITEM'];0;0
kmehr.assert.P0.52 = /kmehrmessage/folder/transaction/heading/item/cd[@SV!='1.11'];0;0
kmehr.assert.P0.53 = /kmehrmessage/folder/transaction/heading/item/cd[text()!='medication'];0;0

#(:Medicinalproduct: should always contain intendedcd (CNK). In case no CNK is known; intendedcd equals '0000000'. SV attribute is WSSAMv2 (in case the webservice SAMv2 is used); otherwise it defaults to LOCALDB:)
kmehr.assert.P0.54 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedcd[@S!='CD-DRUG-CNK'];0;0
kmehr.assert.P0.55 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedcd[@SV!='LOCALDB' and @SV!='WSSAMv2'];0;0

#(:Medicinalproduct: if value of intendedcd (CNK) equals '0000000' (default value when no CNK is known); SV attribute always equals 'LOCALDB':)
kmehr.assert.P0.56 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedcd[@SV!='LOCALDB' and text()='0000000'];0;0

#(:Medicinalproduct: intendedname cannot be empty (a product name should always be provided):)
kmehr.assert.P0.57 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedname[string-length (text())=0];0;0

#(:Substanceproduct (INN): correct use of attributes and intendedname should not be empty (a cluster description/name should always be provided):)
kmehr.assert.P0.58 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[@S!='CD-INNCLUSTER' and @S!='CD-VMPGROUP'];0;0
kmehr.assert.P0.59 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[@SV!='LOCALDB' and @SV!='WSSAMv2'];0;0
kmehr.assert.P0.60 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedname[string-length (text())=0];0;0

#(:Compoundprescription: Formularyreference: at least 1 cd; including S attribute =CD-FORMULARYREFERENCE should be present:)
kmehr.assert.P0.61 = count(/kmehrmessage/folder/transaction/heading/item/content/compoundprescription/formularyreference/cd[@S='CD-FORMULARYREFERENCE' and @SV='1.0' and (@L='fr' or @L='nl') and (string-length(@DN)!=0) and (string-length(text())!=0) and starts-with(text(),'05') and (string-length(text())=7)])=count(/kmehrmessage/folder/transaction/heading/item/content/compoundprescription/formularyreference)

#(:Lifecycle: every item should contain a lifecycle element with cd and corresponding attributes. cd value = prescribed:)
kmehr.assert.P0.62 = count(/kmehrmessage/folder/transaction/heading/item/lifecycle/cd[@S='CD-LIFECYCLE' and @SV='1.9' and text()='prescribed'])=count(/kmehrmessage/folder/transaction/heading/item)

#(:Temporality: optional; but if present; correct usage of S and SV attributes:)
kmehr.assert.P0.63 = /kmehrmessage/folder/transaction/heading/item/temporality/cd[not (@S='CD-TEMPORALITY') or not(@SV='1.0')];0;0

#(:Quantity: if prescription contains a medicinalproduct or compoundprescription; quantity should be specified:)
kmehr.assert.P0.64 = count(/kmehrmessage/folder/transaction/heading/item[(content/compoundprescription)]/quantity)=count(/kmehrmessage/folder/transaction/heading/item/content/compoundprescription)
kmehr.assert.P0.65 = count(/kmehrmessage/folder/transaction/heading/item[(content/medicinalproduct)]/quantity)=count(/kmehrmessage/folder/transaction/heading/item/content/medicinalproduct)

#(:Quantity: If substancecode/cd element contains the cluster code; no quantity should be present (duration should be specified):)
kmehr.assert.P0.66 = /kmehrmessage/folder/transaction/heading/item[(quantity)]/content/substanceproduct/intendedcd[text()!='0000000'];0;0

#(:Posology: posology is a mandatory element; and should be encoded as text (it should exactly correspond to the posology as printed on the proof of electronic prescription). Supplementary a regimen can be specified according to Vitalink-specifications. In case a posology is not relevant; please use the string 'niet van toepassing' or 'pas d'application'. In case the posology is known by the patient (en thus there is no need to further specify it); please use the string 'usage connu' or 'gebruik gekend'.:)
kmehr.assert.P0.67 = count(/kmehrmessage/folder/transaction/heading/item/posology/text)=count(/kmehrmessage/folder/transaction/heading/item)

kmehr.assert.P0.68 = /kmehrmessage/folder/transaction/heading/item/posology/text[string-length(text())=0];0;0

#(:Vitalink Medication scheme rule:  Beginmoment should be present for every item::)
kmehr.assert.P0.69 = count(/kmehrmessage/folder/transaction/heading/item/beginmoment/date)=count(kmehrmessage/folder/transaction/heading/item)

#(:Vitalink Medication scheme rule:  Frequency (optional); can only contain periodicity; with correct SV attribute (1.1); and cannot contain following values: UQ; US; UN; UX en UE:)
kmehr.assert.P0.70 = /kmehrmessage/folder/transaction/heading/item/frequency/periodicity/cd[text()='UQ' or text()='US' or text()='UN' or text()='UX' or text()='UE'];0;0
kmehr.assert.P0.71 = count(/kmehrmessage/folder/transaction/heading/item/frequency/periodicity/cd[@S='CD-PERIODICITY' and @SV='1.1'])=count(/kmehrmessage/folder/transaction/heading/item/frequency)

# Substanceproduct (INN): supplementary rules for correct usage of the INN-cluster codes:)
kmehr.assert.P0.72 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[string-length (text())!=7];0;0
kmehr.assert.P0.73 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[@S='CD-INNCLUSTER' and not (starts-with(text(),'8') or starts-with(text(),'0'))];0;0

#(:Deliverydate should not be present:)
kmehr.assert.P0.74 = /kmehrmessage/folder/transaction/heading/item/deliverydate;0;0

#(:Content: once or twice per item, applying the correct order:)
kmehr.assert.P0.75 = /kmehrmessage/folder/transaction/heading/item/content;0
kmehr.assert.P0.76 = /kmehrmessage/folder/transaction/heading/item/content[3];0;0
kmehr.assert.P0.77 = /kmehrmessage/folder/transaction/heading/item/content[2]/cd[@S!='LOCAL' or @SV!= '1.0' or @SL!='SAMPROOF'];0;0
kmehr.assert.P0.78 = /kmehrmessage/folder/transaction/heading/item/content[1]/cd;0;0

#(:header: externalsource must be present:)
kmehr.assert.P0.79 = /kmehrmessage/header/externalsource;1;1
kmehr.assert.P0.80 = /kmehrmessage/header/externalsource/source/cd[string-length(text())!=0];1;1
kmehr.assert.P0.81 = /kmehrmessage/header/externalsource/source/version[string-length(text())!=0];1;1

#######################################################################################################################
######################    P1   ########################################################################################
#######################################################################################################################

##(:Kmehr versions supported: 1.28 (20190301):)
kmehr.assert.P1.1 = /kmehrmessage/header/standard/cd[@S='CD-STANDARD' and @SV='1.29' and (text()='20190301')];1;1

##(:2 header IDs must be present: first one with "S" attribute = ID-KMEHR; the second one with "S" attribute = LOCAL:)
kmehr.assert.P1.2 = /kmehrmessage/header/id;2;2
kmehr.assert.P1.3 = /kmehrmessage/header/id[1][@S='ID-KMEHR' and @SV='1.0'];1
kmehr.assert.P1.4 = /kmehrmessage/header/id[2][@S='LOCAL'];1

##(:Sender: At least 2 hcparty's: individual healthcareprovider (or hospital) and "application" (softwareprovider). Name or combination firstname + familyname should always be present:)
kmehr.assert.P1.5 = /kmehrmessage/header/sender/hcparty;2
kmehr.assert.P1.6 = /kmehrmessage/header/sender/hcparty/id[@S='ID-HCPARTY' and @SV='1.0'];1
kmehr.assert.P1.7 = /kmehrmessage/header/sender/hcparty/cd[@S='CD-HCPARTY' and @SV='1.15' and (text()='orghospital' or text()='persphysician' or text()='persmidwife' or text()='persdentist')];1
kmehr.assert.P1.8 = /kmehrmessage/header/sender/hcparty/cd[@S='CD-HCPARTY' and @SV='1.15' and text()='application'];1
kmehr.assert.P1.9 = /kmehrmessage/header/sender/hcparty[name or familyname];1

##(:For sender "application"; both telephone and email need to be present; and cannot be empty:)
kmehr.assert.P1.10 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-ADDRESS' and @SV='1.1']/text();2
kmehr.assert.P1.11 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-TELECOM' and @SV='1.0']/text();2
kmehr.assert.P1.12 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-TELECOM' and text()='phone'];1
kmehr.assert.P1.13 = /kmehrmessage/header/sender/hcparty[2]/telecom/cd[@S='CD-TELECOM' and text()='email'];1
kmehr.assert.P1.14 = /kmehrmessage/header/sender/hcparty[2]/telecom/telecomnumber[string-length(text())!=0];1

##(:Recipient: only 1 hcparty with recipe data:)
kmehr.assert.P1.15 = /kmehrmessage/header/recipient/hcparty/id[@S='ID-HCPARTY' and @SV='1.0' and text()='RECIPE'];1;1
kmehr.assert.P1.16 = /kmehrmessage/header/recipient/hcparty/cd[@S='CD-HCPARTY' and @SV='1.15' and text()='orgpublichealth'];1;1
kmehr.assert.P1.17 = /kmehrmessage/header/recipient/hcparty/name[text()='Recip-e'];1;1

##(:Folder: exactly 1 folder; with exactly 1 ID; with value "1":)
kmehr.assert.P1.18 = /kmehrmessage/folder/id[@S='ID-KMEHR' and @SV='1.0' and text()='1'];1;1

##(:Patient: exactly 1 patient; with exactly 1 ID (= INSZ/NISS number in 11 positions):)
kmehr.assert.P1.19 = /kmehrmessage/folder/patient;1;1
kmehr.assert.P1.20 = /kmehrmessage/folder/patient/id;1;1
kmehr.assert.P1.21 = /kmehrmessage/folder/patient/id[@S='ID-PATIENT' and @SV='1.0' and (string-length(text())=11)];1;1

##(:Patient: presence of firstname; familyname; sex and birthdate:)
kmehr.assert.P1.22 = /kmehrmessage/folder/patient/firstname;1;1
kmehr.assert.P1.23 = /kmehrmessage/folder/patient/familyname;1;1
kmehr.assert.P1.24 = /kmehrmessage/folder/patient/birthdate[date or year or yearmonth];1;1
kmehr.assert.P1.25 = /kmehrmessage/folder/patient/sex/cd[@S='CD-SEX' and @SV='1.1'];1;1

##(:Transaction: Exactly 1 transaction; with 1 ID and 1 CD (CD-TRANSACTION with value pharmaceuticalprescription):)
kmehr.assert.P1.26 = /kmehrmessage/folder/transaction/id[@S='ID-KMEHR' and @SV='1.0' and text()='1'];1;1
kmehr.assert.P1.27 = /kmehrmessage/folder/transaction/cd[@S='CD-TRANSACTION' and @SV='1.13' and text()='pharmaceuticalprescription'];1;1

##(:Author: Exactly 1 hcparty; with 1 ID (in 11 positions; starting with 1; 3 or 4) and 1 CD-HCPARTY (only allowed prescribers):)
kmehr.assert.P1.28 = /kmehrmessage/folder/transaction/author/hcparty;1;1
kmehr.assert.P1.29 = /kmehrmessage/folder/transaction/author/hcparty/id;1;1
kmehr.assert.P1.30 = /kmehrmessage/folder/transaction/author/hcparty/id[@S='ID-HCPARTY' and @SV='1.0' and string-length(text())=11];1;1
kmehr.assert.P1.31 = /kmehrmessage/folder/transaction/author/hcparty/cd;1;1
kmehr.assert.P1.32 = /kmehrmessage/folder/transaction/author/hcparty/cd[@S='CD-HCPARTY' and @SV='1.15' and (text()='persphysician' or text()='persmidwife' or text()='persdentist')];1;1

#(:Author: presence of name or combination firstname + familyname; presence of address; presence of telephone number:)
kmehr.assert.P1.33 = /kmehrmessage/folder/transaction/author/hcparty[name or familyname];1
kmehr.assert.P1.34 = /kmehrmessage/folder/transaction/author/hcparty/address;1;1
kmehr.assert.P1.35 = /kmehrmessage/folder/transaction/author/hcparty/address/cd[@S='CD-ADDRESS' and (@SV='1.0' or @SV='1.1') and text()='work'];1;1
kmehr.assert.P1.36 = /kmehrmessage/folder/transaction/author/hcparty/telecom/cd[@S='CD-ADDRESS' and (@SV='1.0' or @SV='1.1') and text()='work'];1;1
kmehr.assert.P1.37 = /kmehrmessage/folder/transaction/author/hcparty/telecom/cd[@S='CD-TELECOM' and @SV='1.0' and text()='phone'];1;1
kmehr.assert.P1.38 = /kmehrmessage/folder/transaction/author/hcparty/telecom/telecomnumber[string-length(text())>1];1;1

#(:Transaction: "iscomplete" and "isvalidated" are both true; no expirationdate should be defined:)
kmehr.assert.P1.39 = /kmehrmessage/folder/transaction/iscomplete[text()='true'];1;1
kmehr.assert.P1.40 = /kmehrmessage/folder/transaction/isvalidated[text()='true'];1;1
kmehr.assert.P1.41 = /kmehrmessage/folder/transaction/expirationdate;1;1

#(:Transaction: contains exactly 1 heading; and cannot contain any items:)
kmehr.assert.P1.42 = /kmehrmessage/folder/transaction/heading;1;1
kmehr.assert.P1.43 = /kmehrmessage/folder/transaction/item;0;0

#(:Heading: exactly 1 ID and 1 CD (CD-HEADING) with value 'prescription':)
kmehr.assert.P1.44 = /kmehrmessage/folder/transaction/heading/id[@S='ID-KMEHR' and @SV='1.0' and text()='1'];1;1
kmehr.assert.P1.45 = /kmehrmessage/folder/transaction/heading/cd[@S='CD-HEADING' and @SV='1.2' and text()='prescription'];1;1

#(:Heading: cannot contain any other headings or text:)
kmehr.assert.P1.46 = /kmehrmessage/folder/transaction/heading/heading;0;0
kmehr.assert.P1.47 = /kmehrmessage/folder/transaction/heading/text;0;0

#(:Items: at least 1 and no more than 10; with correct ID en CD specifications:)
kmehr.assert.P1.48 = /kmehrmessage/folder/transaction/heading/item;1;10
kmehr.assert.P1.49 = /kmehrmessage/folder/transaction/heading/item/id[@S!='ID-KMEHR'];0;0
kmehr.assert.P1.50 = /kmehrmessage/folder/transaction/heading/item/id[@SV!='1.0'];0;0
kmehr.assert.P1.51 = /kmehrmessage/folder/transaction/heading/item/cd[@S!='CD-ITEM'];0;0
kmehr.assert.P1.52 = /kmehrmessage/folder/transaction/heading/item/cd[@SV!='1.11'];0;0
kmehr.assert.P1.53 = /kmehrmessage/folder/transaction/heading/item/cd[text()!='medication'];0;0

#(:Content: only once per item:)
## kmehr.assert.P1.66 = count(/kmehrmessage/folder/transaction/heading/item/content)=count(/kmehrmessage/folder/transaction/heading/item);1;1

#(:Medicinalproduct: should always contain intendedcd (CNK). In case no CNK is known; intendedcd equals '0000000'. SV attribute is WSSAMv2 (in case the webservice SAMv2 is used); otherwise it defaults to LOCALDB:)
kmehr.assert.P1.54 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedcd[@S!='CD-DRUG-CNK'];0;0
kmehr.assert.P1.55 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedcd[@SV!='LOCALDB' and @SV!='WSSAMv2'];0;0

#(:Medicinalproduct: if value of intendedcd (CNK) equals '0000000' (default value when no CNK is known); SV attribute always equals 'LOCALDB':)
kmehr.assert.P1.56 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedcd[@SV!='LOCALDB' and text()='0000000'];0;0

#(:Medicinalproduct: intendedname cannot be empty (a product name should always be provided):)
kmehr.assert.P1.57 = /kmehrmessage/folder/transaction/heading/item/content/medicinalproduct/intendedname[string-length (text())=0];0;0

#(:Substanceproduct (INN): correct use of attributes and intendedname should not be empty (a cluster description/name should always be provided):)
kmehr.assert.P1.58 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[@S!='CD-INNCLUSTER' and @S!='CD-VMPGROUP'];0;0
kmehr.assert.P1.59 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[@SV!='LOCALDB' and @SV!='WSSAMv2'];0;0
kmehr.assert.P1.60 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedname[string-length (text())=0];0;0

#(:Compoundprescription: Formularyreference: at least 1 cd; including S attribute =CD-FORMULARYREFERENCE should be present:)
kmehr.assert.P1.61 = count(/kmehrmessage/folder/transaction/heading/item/content/compoundprescription/formularyreference/cd[@S='CD-FORMULARYREFERENCE' and @SV='1.0' and (@L='fr' or @L='nl') and (string-length(@DN)!=0) and (string-length(text())!=0) and starts-with(text(),'05') and (string-length(text())=7)])=count(/kmehrmessage/folder/transaction/heading/item/content/compoundprescription/formularyreference)

#(:Lifecycle: every item should contain a lifecycle element with cd and corresponding attributes. cd value = prescribed:)
kmehr.assert.P1.62 = count(/kmehrmessage/folder/transaction/heading/item/lifecycle/cd[@S='CD-LIFECYCLE' and @SV='1.9' and text()='prescribed'])=count(/kmehrmessage/folder/transaction/heading/item)

#(:Temporality: optional; but if present; correct usage of S and SV attributes:)
kmehr.assert.P1.63 = /kmehrmessage/folder/transaction/heading/item/temporality/cd[not (@S='CD-TEMPORALITY') or not(@SV='1.0')];0;0

#(:Quantity: if prescription contains a medicinalproduct or compoundprescription; quantity should be specified:)
kmehr.assert.P1.64 = count(/kmehrmessage/folder/transaction/heading/item[(content/compoundprescription)]/quantity)=count(/kmehrmessage/folder/transaction/heading/item/content/compoundprescription)
kmehr.assert.P1.65 = count(/kmehrmessage/folder/transaction/heading/item[(content/medicinalproduct)]/quantity)=count(/kmehrmessage/folder/transaction/heading/item/content/medicinalproduct)

#(:Quantity: If substancecode/cd element contains the cluster code; no quantity should be present (duration should be specified):)
kmehr.assert.P1.66 = /kmehrmessage/folder/transaction/heading/item[(quantity)]/content/substanceproduct/intendedcd[text()!='0000000'];0;0

#(:Posology: posology is a mandatory element; and should be encoded as text (it should exactly correspond to the posology as printed on the proof of electronic prescription). Supplementary a regimen can be specified according to Vitalink-specifications. In case a posology is not relevant; please use the string 'niet van toepassing' or 'pas d'application'. In case the posology is known by the patient (en thus there is no need to further specify it); please use the string 'usage connu' or 'gebruik gekend'.:)
kmehr.assert.P1.67 = count(/kmehrmessage/folder/transaction/heading/item/posology/text)=count(/kmehrmessage/folder/transaction/heading/item)
kmehr.assert.P1.68 = /kmehrmessage/folder/transaction/heading/item/posology/text[string-length(text())=0];0;0

#(:Vitalink Medication scheme rule:  Beginmoment should be present for every item::)
kmehr.assert.P1.69 = count(/kmehrmessage/folder/transaction/heading/item/beginmoment/date)=count(kmehrmessage/folder/transaction/heading/item)

#(:Vitalink Medication scheme rule:  Frequency (optional); can only contain periodicity; with correct SV attribute (1.1); and cannot contain following values: UQ; US; UN; UX en UE:)
kmehr.assert.P1.70 = /kmehrmessage/folder/transaction/heading/item/frequency/periodicity/cd[text()='UQ' or text()='US' or text()='UN' or text()='UX' or text()='UE'];0;0
kmehr.assert.P1.71 = count(/kmehrmessage/folder/transaction/heading/item/frequency/periodicity/cd[@S='CD-PERIODICITY' and @SV='1.1'])=count(/kmehrmessage/folder/transaction/heading/item/frequency)

# Substanceproduct (INN): supplementary rules for correct usage of the INN-cluster codes:)
kmehr.assert.P1.72 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[string-length (text())!=7];0;0
kmehr.assert.P1.73 = /kmehrmessage/folder/transaction/heading/item/content/substanceproduct/intendedcd[@S='CD-INNCLUSTER' and not (starts-with(text(),'8') or starts-with(text(),'0'))];0;0

#(:Deliverydate should not be present:)
kmehr.assert.P1.74 = /kmehrmessage/folder/transaction/heading/item/deliverydate;0;0

#(:Content: once or twice per item, applying the correct order:)
kmehr.assert.P1.75 = /kmehrmessage/folder/transaction/heading/item/content;0
kmehr.assert.P1.76 = /kmehrmessage/folder/transaction/heading/item/content[3];0;0
kmehr.assert.P1.77 = /kmehrmessage/folder/transaction/heading/item/content[2]/cd[@S!='LOCAL' or @SV!= '1.0' or @SL!='SAMPROOF'];0;0
kmehr.assert.P1.78 = /kmehrmessage/folder/transaction/heading/item/content[1]/cd;0;0

#(:header: externalsource must be present:)
kmehr.assert.P1.79 = /kmehrmessage/header/externalsource;1;1
kmehr.assert.P1.80 = /kmehrmessage/header/externalsource/source/cd[string-length(text())!=0];1;1
kmehr.assert.P1.81 = /kmehrmessage/header/externalsource/source/version[string-length(text())!=0];1;1